{"version":3,"sources":["shared/components/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLink.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPLace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpiration","setTokenExpiration","setUserId","useCallback","uid","expiration","Date","getTime","localStorage","setItem","JSON","stringify","toISOString","removeItem","useEffect","time","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.d7caf0d3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState();\r\n  const [tokenExpiration, setTokenExpiration] = useState();\r\n  const [userId, setUserId] = useState();\r\n\r\n  const login = useCallback((uid, token, expiration) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n\r\n    const tokenExpiration =\r\n      expiration || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\r\n    setTokenExpiration(tokenExpiration);\r\n\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpiration.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpiration(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiration) {\r\n      const time = tokenExpiration.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, time);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpiration]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  \r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react'\r\n\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader = (props) => {\r\n    return (\r\n        <header className=\"main-header\">\r\n            {props.children}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainHeader","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport Button from '../FormElements/Button'\r\n\r\nimport \"./NavLink.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact={true}>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">Add Places</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && \r\n        <li>\r\n          <Button  onClick={auth.logout}>Log Out</Button>\r\n        </li>\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport{CSSTransition} from 'react-transition-group'\r\n\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = (props) => {\r\n    \r\n    const content = (\r\n        <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n        </CSSTransition>\r\n    )\r\n\r\n    return ReactDOM.createPortal(content,document.getElementById('drawer-hook'))\r\n}\r\n\r\nexport default SideDrawer","import React,{useState} from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport MainHeader from './MainHeader'\r\nimport NavLinks from './NavLink'\r\nimport SideDrawer from './SideDrawer'\r\nimport Backdrop from '../UIElements/Backdrop'\r\n\r\nimport './MainNavigation.css'\r\n\r\nconst MainNavigation = (props) => {\r\n    const [drawerIsOpen,setDrawerIsOpen] = useState(false)\r\n    const openDrawerHandler = () =>{\r\n        setDrawerIsOpen(true)\r\n    }\r\n\r\n    const closeDrawerHandler = () =>{\r\n        setDrawerIsOpen(false)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        {drawerIsOpen&& <Backdrop onClick={closeDrawerHandler}/>}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks/>\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span/>\r\n                    <span/>\r\n                    <span/>\r\n                </button>\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">Your Places</Link> \r\n                </h1>\r\n                <nav className=\"main-navigation__header-nav\">\r\n                    <NavLinks/>\r\n                </nav>\r\n\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","import React, { Suspense } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/components/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPLace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <Users />\n        </Route>\n\n        <Route path=\"/:userId/places\" exact={true}>\n          <UserPlaces />\n        </Route>\n\n        <Route path=\"/places/new\" exact={true}>\n          <NewPLace />\n        </Route>\n\n        <Route path=\"/places/:placeId\" exact={true}>\n          <UpdatePlace />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <Users />\n        </Route>\n\n        <Route path=\"/:userId/places\" exact={true}>\n          <UserPlaces />\n        </Route>\n\n        <Route path=\"/auth\" exact={true}>\n          <Auth />\n        </Route>\n\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ userId, isLoggedIn: !!token, token: token, login, logout }}\n    >\n      <BrowserRouter className=\"App\">\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner asOverlay />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}