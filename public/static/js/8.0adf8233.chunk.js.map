{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UserList","items","length","map","users","key","places","Users","useState","setUsers","useHttpClient","isLoading","ErrorMsg","sendRequest","clearError","useEffect","a","responseData","fetchUser","Fragment","ErrorModal","error","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,uLCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCqBpCE,G,MAzBE,SAACV,GACd,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBAEZ,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YAEJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAGnF,yBAAKb,UAAU,mBACX,4BAAKD,EAAMc,MACX,4BACCd,EAAMe,WADP,IACwC,IAApBf,EAAMe,WAAiB,QAAQ,gBCG5DC,G,MAlBE,SAAChB,GACd,OAAIA,EAAMiB,MAAMC,OAUZ,wBAAIjB,UAAU,cACTD,EAAMiB,MAAME,KAAI,SAAAC,GAAK,OAClB,kBAAC,EAAD,CAAUC,IAAKD,EAAMR,GAAIA,GAAIQ,EAAMR,GAAIN,MAAOc,EAAMd,MAAOQ,KAAMM,EAAMN,KAAMC,WAAYK,EAAME,OAAOJ,aAV1G,yBAAKjB,UAAU,UACX,kBAACF,EAAA,EAAD,KACI,kD,wBCyBLwB,UA7BD,WAAO,IAAD,EACQC,qBADR,mBACXJ,EADW,KACJK,EADI,OAEuCC,cAAjDC,EAFU,EAEVA,UAAWC,EAFD,EAECA,SAAUC,EAFX,EAEWA,YAAaC,EAFxB,EAEwBA,WAc1C,OAbAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEaH,EACzBhB,mCAHY,OAERoB,EAFQ,OAMdR,EAASQ,EAAab,OANR,uGAAH,qDASfc,KACC,CAACL,IAGF,kBAAC,IAAMM,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAOT,EAAUU,QAASR,IACrCH,GACC,yBAAK1B,UAAU,UACb,kBAACsC,EAAA,EAAD,QAGFZ,GAAaP,GAAS,kBAAC,EAAD,CAAWH,MAAOG","file":"static/js/8.0adf8233.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Avatar from '../../shared/components/UIElements/Avatar'\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport './UserItem.css'\r\n\r\nconst UserItem = (props) => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n \r\n                <Link to={`/${props.id}/places`}>\r\n\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name}/>\r\n                    </div>\r\n\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>\r\n                        <h3>\r\n                        {props.placeCount} {props.placeCount ===1 ?'Place':\"Places\"}\r\n                        </h3>\r\n                    </div>\r\n\r\n                </Link>\r\n\r\n            </Card>\r\n        </li>\r\n    )\r\n\r\n}\r\nexport default UserItem","import React from 'react'\r\nimport UserItem from './UserItem'\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport './UsersList.css'\r\n\r\nconst UserList = (props) => {\r\n    if(!props.items.length){\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No Users found</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {props.items.map(users => (\r\n                <UserItem key={users.id} id={users.id} image={users.image} name={users.name} placeCount={users.places.length}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default UserList","import React, { useEffect, useState } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState();\r\n  const { isLoading, ErrorMsg, sendRequest, clearError } = useHttpClient();\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\"/users\"\r\n        );\r\n\r\n        setUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUser();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={ErrorMsg} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && users && <UsersList items={users} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}